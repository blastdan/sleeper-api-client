/**
 * Sleeper API
 * The Sleeper API is a read-only HTTP API that is free to use and allows             access to a users leagues, drafts, and rosters. No API Token is necessary, as you cannot modify contents via this API. Be mindful of the frequency of calls. A general rule is to stay under 1000 API calls per minute, otherwise, you risk being IP-blocked.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UserInLeagueMetadata } from './UserInLeagueMetadata';
import { HttpFile } from '../http/http';

export class UserInLeague {
    'userId': string;
    'username': string;
    'displayName': string;
    'avatar': string;
    'metadata': UserInLeagueMetadata;
    'isOwner': boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "avatar",
            "baseName": "avatar",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "UserInLeagueMetadata",
            "format": ""
        },
        {
            "name": "isOwner",
            "baseName": "is_owner",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UserInLeague.attributeTypeMap;
    }
    
    public constructor() {
    }
}


/**
 * Sleeper API
 * The Sleeper API is a read-only HTTP API that is free to use and allows             access to a users leagues, drafts, and rosters. No API Token is necessary, as you cannot modify contents via this API. Be mindful of the frequency of calls. A general rule is to stay under 1000 API calls per minute, otherwise, you risk being IP-blocked.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class RosterSettings {
    'wins': number;
    'waiverPosition': number;
    'waiverBudgetUsed': number;
    'totalMoves': number;
    'ties': number;
    'losses': number;
    'fptsDecimal': number;
    'fptsAgainstDecimal': number;
    'fptsAgainst': number;
    'fpts': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "wins",
            "baseName": "wins",
            "type": "number",
            "format": ""
        },
        {
            "name": "waiverPosition",
            "baseName": "waiver_position",
            "type": "number",
            "format": ""
        },
        {
            "name": "waiverBudgetUsed",
            "baseName": "waiver_budget_used",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalMoves",
            "baseName": "total_moves",
            "type": "number",
            "format": ""
        },
        {
            "name": "ties",
            "baseName": "ties",
            "type": "number",
            "format": ""
        },
        {
            "name": "losses",
            "baseName": "losses",
            "type": "number",
            "format": ""
        },
        {
            "name": "fptsDecimal",
            "baseName": "fpts_decimal",
            "type": "number",
            "format": ""
        },
        {
            "name": "fptsAgainstDecimal",
            "baseName": "fpts_against_decimal",
            "type": "number",
            "format": ""
        },
        {
            "name": "fptsAgainst",
            "baseName": "fpts_against",
            "type": "number",
            "format": ""
        },
        {
            "name": "fpts",
            "baseName": "fpts",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RosterSettings.attributeTypeMap;
    }
    
    public constructor() {
    }
}


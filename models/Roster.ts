/**
 * Sleeper API
 * The Sleeper API is a read-only HTTP API that is free to use and allows             access to a users leagues, drafts, and rosters. No API Token is necessary, as you cannot modify contents via this API. Be mindful of the frequency of calls. A general rule is to stay under 1000 API calls per minute, otherwise, you risk being IP-blocked.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RosterSettings } from './RosterSettings';
import { HttpFile } from '../http/http';

export class Roster {
    'starters': Array<string>;
    'settings': RosterSettings;
    'rosterId': number;
    'reserve': Array<string>;
    'players': Array<string>;
    'ownerId': string;
    'leagueId': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "starters",
            "baseName": "starters",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "settings",
            "baseName": "settings",
            "type": "RosterSettings",
            "format": ""
        },
        {
            "name": "rosterId",
            "baseName": "roster_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "reserve",
            "baseName": "reserve",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "players",
            "baseName": "players",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "ownerId",
            "baseName": "owner_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "leagueId",
            "baseName": "league_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Roster.attributeTypeMap;
    }
    
    public constructor() {
    }
}


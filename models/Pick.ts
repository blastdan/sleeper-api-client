/**
 * Sleeper API
 * The Sleeper API is a read-only HTTP API that is free to use and allows             access to a users leagues, drafts, and rosters. No API Token is necessary, as you cannot modify contents via this API. Be mindful of the frequency of calls. A general rule is to stay under 1000 API calls per minute, otherwise, you risk being IP-blocked.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PickMetadata } from './PickMetadata';
import { HttpFile } from '../http/http';

export class Pick {
    'playerId': string;
    /**
    * user_id this pick will go to (not all leagues have users in every slot, this can be \"\"
    */
    'pickedBy': string;
    /**
    * roster_id this pick will go to
    */
    'rosterId': string;
    'round': number;
    /**
    * which column this is on the draftboard
    */
    'draftSlot': number;
    'pickNo': number;
    'metadata': PickMetadata;
    'isKeeper': boolean;
    'draftId': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "playerId",
            "baseName": "player_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "pickedBy",
            "baseName": "picked_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "rosterId",
            "baseName": "roster_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "round",
            "baseName": "round",
            "type": "number",
            "format": ""
        },
        {
            "name": "draftSlot",
            "baseName": "draft_slot",
            "type": "number",
            "format": ""
        },
        {
            "name": "pickNo",
            "baseName": "pick_no",
            "type": "number",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "PickMetadata",
            "format": ""
        },
        {
            "name": "isKeeper",
            "baseName": "is_keeper",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "draftId",
            "baseName": "draft_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Pick.attributeTypeMap;
    }
    
    public constructor() {
    }
}

